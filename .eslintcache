[{"E:\\sensex_trading\\src\\index.js":"1","E:\\sensex_trading\\src\\App.js":"2","E:\\sensex_trading\\src\\reportWebVitals.js":"3","E:\\sensex_trading\\src\\Header.js":"4","E:\\sensex_trading\\src\\Newsfeed.js":"5","E:\\sensex_trading\\src\\Stats.js":"6","E:\\sensex_trading\\src\\LineGraph.js":"7","E:\\sensex_trading\\src\\StatsRow.js":"8","E:\\sensex_trading\\src\\firebase.js":"9","E:\\sensex_trading\\src\\TimeLine.js":"10","E:\\sensex_trading\\src\\Chip.js":"11"},{"size":179,"mtime":1607179331016,"results":"12","hashOfConfig":"13"},{"size":470,"mtime":1607179112428,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":975,"mtime":1607177679957,"results":"16","hashOfConfig":"13"},{"size":2030,"mtime":1608276765917,"results":"17","hashOfConfig":"13"},{"size":3156,"mtime":1608007965348,"results":"18","hashOfConfig":"13"},{"size":2563,"mtime":1607952030164,"results":"19","hashOfConfig":"13"},{"size":795,"mtime":1607951311807,"results":"20","hashOfConfig":"13"},{"size":500,"mtime":1607955628456,"results":"21","hashOfConfig":"13"},{"size":689,"mtime":1608087823574,"results":"22","hashOfConfig":"13"},{"size":380,"mtime":1608274676339,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1x0te5j",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\sensex_trading\\src\\index.js",[],["52","53"],"E:\\sensex_trading\\src\\App.js",["54"],"import logo from './logo.svg';\nimport './App.css';\nimport Header from \"./Header\";\nimport Newsfeed from \"./Newsfeed\"\nimport Stats from \"./Stats\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* Header */}\n   <div className=\"app__header\">\n   <Header />\n\n   </div>\n    <div className=\"app__body\">  \n    <div className=\"app__container\" >\n      <Newsfeed />\n     {/* stats */}\n     <Stats />\n\n    </div>\n    \n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\sensex_trading\\src\\reportWebVitals.js",[],"E:\\sensex_trading\\src\\Header.js",["55","56","57","58","59","60"],"import React from 'react';\r\nimport Logo from './robinhood.svg'\r\nimport './Header.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n         <div className=\"header__wrapper\">\r\n             {/* logo */}\r\n             <div className=\"header__logo\">\r\n             <img src ={Logo} width={25} />\r\n             </div>\r\n             {/* search */}\r\n             <div className=\".header__search\">\r\n                 <div className=\"header__searchContainer\">\r\n                   <input placeholder=\"Search\" type=\"text\" />\r\n                 </div>\r\n             </div>\r\n             {/* menuiteam */}\r\n             <div className=\"header__menuItems\">\r\n                 <a href=\"#\">Free Stocks</a>\r\n                 <a href=\"#\">Portfolio</a>\r\n                 <a href=\"#\">Cash</a>\r\n                 <a href=\"#\">Message</a>\r\n                 <a href=\"#\">Account</a>\r\n                 \r\n             </div>\r\n\r\n         </div>   \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","E:\\sensex_trading\\src\\Newsfeed.js",["61"],"E:\\sensex_trading\\src\\Stats.js",["62","63","64"],"import React, { useEffect, useState } from 'react';\r\nimport './Stats.css';\r\nimport axios from 'axios';\r\nimport StatsRow from './StatsRow'\r\nimport {db} from './firebase'\r\nconst TOKEN = \"bvbddn748v6v15ep4s30\"\r\nconst BASE_URL=\"https://finnhub.io/api/v1/quote\"\r\n\r\nfunction Stats() {\r\n  const [stockData, setstockData] = useState([])\r\n  const [myStocks, setmyStocks] = useState([])\r\n  const getMyStocks = () => {\r\n    db\r\n    .collection('myStocks')\r\n    .onSnapshot(snapshot => {\r\n        let promises = [];\r\n        let tempData = []\r\n        snapshot.docs.map((doc) => {\r\n          promises.push(getStocksData(doc.data().ticker)\r\n          .then(res => {\r\n            tempData.push({\r\n              id: doc.id,\r\n              data: doc.data(),\r\n              info: res.data\r\n            })\r\n          })\r\n        )})\r\n        Promise.all(promises).then(()=>{\r\n            // console.log(tempData);\r\n          setmyStocks(tempData);\r\n        })\r\n    })\r\n  }\r\n\r\n  const getStocksData = (stock)=> {\r\n      return axios\r\n      .get(`${BASE_URL}?symbol=${stock}&token=${TOKEN}`)\r\n      .catch((error)=> {\r\n          console.error(\"Error\",error.message);\r\n      });\r\n      \r\n\r\n  };\r\n\r\n    useEffect(()=> {\r\n        let tempstocksData =[]\r\n        const stocksList =[\"AAPL\",\"MSFT\",\"TSLA\",\"FB\",\"BABA\",\"UBER\",\"DIS\",\"SBUX\",\"CAV\"];\r\n         let promises =[];\r\n         getMyStocks();\r\n         stocksList.map((stock)=> {\r\n             promises.push(getStocksData(stock)\r\n             .then((res)=> {\r\n                 //console.log(res);\r\n                   tempstocksData.push ({\r\n                      name:stock,\r\n                      ...res.data\r\n                 });\r\n             })\r\n             )\r\n         });\r\n          \r\n                   Promise.all(promises).then(()=> {\r\n                       setstockData(tempstocksData)\r\n                       console.log(tempstocksData);\r\n                   })\r\n    },  [] ) \r\n\r\n    return (\r\n        <div className=\"stats\">\r\n         <div className=\"stats__container\">\r\n             <div className=\"stats__header\">\r\n                 <p>Stocks</p>\r\n             </div>\r\n             <div className=\"stats__content\">\r\n                 <div className=\"stats__rows\">\r\n                 {myStocks.map((stock) => (\r\n              <StatsRow\r\n                key={stock.data.ticker}\r\n                name={stock.data.ticker}\r\n                openPrice={stock.info.o}\r\n                shares={stock.data.shares}\r\n                price={stock.info.c}\r\n              />\r\n            ))}\r\n    {/* for out current stocks */}\r\n                 </div>\r\n             </div>\r\n             <div className=\"stats__header\">\r\n             <p>List</p>\r\n             </div>\r\n             <div className=\"stats__content\">\r\n                 <div className=\"stats__rows\"> \r\n        {stockData.map((stock)=> (\r\n             <StatsRow \r\n                key={stock.name}\r\n                name={stock.name}\r\n                openPrice={stock.o}\r\n                price={stock.c}\r\n             />\r\n        ) ) }\r\n     </div>\r\n         </div>\r\n                </div>\r\n                 </div>\r\n                   \r\n    );\r\n}\r\n\r\nexport default Stats;","E:\\sensex_trading\\src\\LineGraph.js",["65"],"import React, { useEffect, useState } from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport './LineGraph.css'\r\n\r\nfunction LineGraph() {\r\n     const[graphData , setGraphData] = useState([]);  \r\n     const data = \r\n       [{\r\n           x:10,\r\n           y:20\r\n       } , { \r\n           x:15,\r\n           y:10\r\n           \r\n        } , \r\n        {\r\n           x:12,\r\n           y:4\r\n        }\r\n        \r\n    ]\r\n     const createMockData = () => {\r\n        let data = [];\r\n        let value = 50;\r\n        for(var i = 0; i < 366; i++){\r\n          let date = new Date();\r\n          date.setHours(0,0,0,0);\r\n          date.setDate(i);\r\n          value += Math.round((Math.random() < 0.5 ? 1 : 0) * Math.random() * 10);\r\n          data.push({x: date, y: value});\r\n        }   \r\n        setGraphData(data);\r\n    }\r\n     useEffect(()=> {\r\n        createMockData();\r\n     } , [])\r\n\r\n    return (\r\n        <div className=\"linegraph\">\r\n\r\n        <Line \r\n            data={{\r\n                  datasets: [\r\n                      {\r\n                          type:\"line\",\r\n                          data:graphData,\r\n                          backgroundColor:\"black\",\r\n                          borderColor:\"#5AC538\",\r\n                          borderWidth:2,\r\n                          pointBorderColor: 'rgba(0, 0, 0, 0)',\r\n                          pointBackgroundColor: 'rgba(0, 0, 0, 0)',\r\n                          pointHoverBackgroundColor:\"#5AC538\",\r\n                          pointHoverBorderColor:\"#000000\",\r\n                          pointHoverBorderWidth:4,\r\n                          pointHoverRadius:6,\r\n\r\n                      }\r\n                  ]\r\n            }}\r\n                 \r\n            options = {{\r\n                maintainAspectRatio:false,\r\n                legend:{\r\n                     display:false\r\n                },\r\n                tooltips: {\r\n                    mode:\"index\",\r\n                    intersect:false\r\n                },\r\n        scales: {\r\n            xAxes: [ \r\n                {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n          // display: true\r\n        },\r\n        ticks: { \r\n          display: false,\r\n        }\r\n      },\r\n    ],\r\n            yAxes: [{\r\n               \r\n                gridLines: {\r\n               display: false,\r\n                },\r\n\r\n                ticks: {\r\n                   display:false\r\n                }\r\n            }]\r\n        }}\r\n    }\r\n       />\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LineGraph;","E:\\sensex_trading\\src\\StatsRow.js",["66"],"import React from 'react';\r\nimport './StatsRow.css';\r\nimport stock from './stock.svg'\r\n\r\nfunction StatsRow(props) {\r\nconst percentage = ((props.price - props.openPrice)/props.openPrice) * 100;\r\n    return (\r\n        <div className=\"row\" >\r\n        <div className=\"row__intro\">\r\n        {/* <h1>Cavisson</h1> */}\r\n         <h1>{props.name}</h1>\r\n          <p>{props.shares && \r\n            (props.shares + \" shares\")\r\n          }</p>\r\n\r\n        </div>\r\n        <div className=\"row__chart\">\r\n          <img src={stock} height={16}/>\r\n        </div>\r\n        <div className=\"row__numbers\">\r\n        <p className=\"row__price\">{props.price} </p>\r\n           <p className=\"row__percentage\">{Number(percentage).toFixed(2)}%</p>\r\n           </div> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StatsRow;","E:\\sensex_trading\\src\\firebase.js",[],"E:\\sensex_trading\\src\\TimeLine.js",[],"E:\\sensex_trading\\src\\Chip.js",["67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":12},{"ruleId":"76","severity":1,"message":"77","line":11,"column":14,"nodeType":"78","endLine":11,"endColumn":44},{"ruleId":"79","severity":1,"message":"80","line":21,"column":18,"nodeType":"78","endLine":21,"endColumn":30},{"ruleId":"79","severity":1,"message":"80","line":22,"column":18,"nodeType":"78","endLine":22,"endColumn":30},{"ruleId":"79","severity":1,"message":"80","line":23,"column":18,"nodeType":"78","endLine":23,"endColumn":30},{"ruleId":"79","severity":1,"message":"80","line":24,"column":18,"nodeType":"78","endLine":24,"endColumn":30},{"ruleId":"79","severity":1,"message":"80","line":25,"column":18,"nodeType":"78","endLine":25,"endColumn":30},{"ruleId":"72","severity":1,"message":"81","line":9,"column":27,"nodeType":"74","messageId":"75","endLine":9,"endColumn":36},{"ruleId":"82","severity":1,"message":"83","line":18,"column":33,"nodeType":"84","messageId":"85","endLine":18,"endColumn":35},{"ruleId":"82","severity":1,"message":"83","line":50,"column":32,"nodeType":"84","messageId":"85","endLine":50,"endColumn":34},{"ruleId":"86","severity":1,"message":"87","line":66,"column":9,"nodeType":"88","endLine":66,"endColumn":11,"suggestions":"89"},{"ruleId":"72","severity":1,"message":"90","line":7,"column":12,"nodeType":"74","messageId":"75","endLine":7,"endColumn":16},{"ruleId":"76","severity":1,"message":"77","line":18,"column":11,"nodeType":"78","endLine":18,"endColumn":41},{"ruleId":"76","severity":1,"message":"77","line":8,"column":13,"nodeType":"78","endLine":8,"endColumn":59},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setTopics' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyStocks'. Either include it or remove the dependency array.","ArrayExpression",["93"],"'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [getMyStocks]",{"range":"96","text":"97"},[1912,1914],"[getMyStocks]"]